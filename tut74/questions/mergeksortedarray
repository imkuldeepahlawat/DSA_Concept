#include <bits/stdc++.h> 

class node{
    public:
        int data;
        int i;
        int j;

    node(int data,int row,int col){
        this->data = data;
        this->i = row;
        this->j = col;
    }
};

class compare{
    public:
        bool operator()(node* a,node* b){
            return a->data > b->data;
        }
};
vector<int> mergeKSortedArrays(vector<vector<int>>&kArrays, int k)
{
    // Write your code here. 
    priority_queue<node*,vector<node*>,compare>pq;
    // saare array ke first element push karne hai
    for(int  i = 0;i<k;i++){
        node* tmp = new node(kArrays[i][0],i,0);
        pq.push(tmp);
    }
    vector<int>ans;

    // step 2
    while(pq.size() > 0){
        node* tmp = pq.top();
        ans.push_back(tmp->data);
        pq.pop();

        int arrayIndex = tmp->i;
        int elementIndex = tmp->j;

        if(elementIndex+1 < kArrays[arrayIndex].size()){
            node* next = new node(kArrays[arrayIndex][elementIndex+1],arrayIndex,elementIndex+1);
            pq.push(next);
        }

    }
    // ans.push_back()
    return ans;

}
